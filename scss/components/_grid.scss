// **********************************************
// _grid.scss
// styles related to the grid system and
// main container.
// major grid styles have been added here for you
// but additional styling may be needed
// **********************************************


// grid base class
.grid {

  // .grid__row
  &__row {
    padding: 1em 10px;
    display: flex;
    flex-direction: column;

    // NOTE: replace with media query mixin if aiming for exceeds
    @include mediaQuery(map-get($break-points, "xs")) {
      flex-direction: row;
    }
  }

  // .grid__col
  &__col {

    // create grid columns dynamically
    // loop through each column size
    @for $i from 1 through 12 {

      // concatenate CSS selector, ie when $i = 1,
      // selector would be .grid__col--1
      &--#{$i} {

        // base styles applied to all grid columns 
        // NOTE: could be converted to a placeholder, along with margin
        // from the  media query
        margin-top: 10px;
        flex-basis: 100%;

        // NOTE: replace with media query mixin if aiming for exceeds
        @include mediaQuery(map-get($break-points, "xs")) {

          // base stlyes applied to all grid columns
          margin-top: 0;

          // make column width a percentage of the column number / total columns
          flex-basis: #{$i / 12 * 100 + "%"} ;
        }
      }
    }
  }
}

// targets all elements with classes that begin with grid__col
[class^=grid__col] {
  // grid__col + grid__col, targets two sibling columns
  & + & {

    // NOTE: replace with media query mixin if aiming for exceeds
     @include mediaQuery(map-get($break-points, "xs")){

      // add grid gutter
      margin-left: 10px;
    }
  }
}
//  layout styling
.grid__row{
  @include flexy($dir:column);
 // using media mixin to add media queries
  @include mediaQuery(map-get($break-points, "l")) {
    // using flexy directive for styling the content for desktop
    @include flexy($dir:row, $jus:center, $align:center);
  
    margin-left:2%;
  }
}
.card p{
  line-height:1.4;
}
// grid buttons styling
$grid-col:("12":#75F8D7, "6":#40A7CA, "4": #55DDF4, "3": #E1B1EE,"5":#88D5A9,"8":#E7A2A2,"7":#FDA28B);

@each $name, $col in $grid-col{
  .grid__col--#{$name}.theme__colors{
    background: $col;
    margin:0px 0px 5px 0px;
    text-transform:lowercase;
    color:$light-color;
    // styling grid system area using media mixin
    @include mediaQuery(map-get($break-points, "l")){
      margin-left:10px;
      text-align: center;
    }
    &:hover{
          background:darken($col, 10%);
    }
  }
}
// styling the buttons using media mixin for desktop version
.grid__col--12{
  @include mediaQuery(map-get($break-points, "l")){
    @include flexy($dir:row, $jus:center);
  }
  .theme__colors{
    margin:1% ;
  }
}
